import React, { useState } from 'react'
import { MouseParallax, ScrollParallax } from 'react-just-parallax' //no me salió a mano asi que tocó
import './App.css'
import Bubble from './components/Bubble/Bubble'
import ColorPicker from './components/ColorPicker/ColorPicker'
import Card from './components/Card/Card'
import SectionSelector from './components/SectionSelector/SectionSelector'

function App() {
  const [colors, setColors] = useState(['#662C91', '#AA73D4', '#4361EE'])
  const [currentSection, setCurrentSection] = useState(0)

  const getRandomColor = () => {
    return colors[Math.floor(Math.random() * 3)]
  }

  const populateBG = (amount) => {
    let elems = []
    for (var i = 0; i <= amount; i++) {
      elems.push(<Bubble color={getRandomColor()} />)
    }
    return elems
  }

  const pickerCallback = (arr) => {
    setColors(arr)
  }

  const showSection = (currentSection) => {
    switch(currentSection) {
      case 0:
        return (
          <div className="cardHolder">
            <Card img={"/chat.png"} title={"Simple Chat Client"} desc={"Uses our class's chat API to show and send messages in a simple chat client with vanilla JS."} url={"https://uvgenios.online/21500/labJSOnly/chat.html"} colors={colors}/>
            <Card img={"/memoria.png"} title={"Card Memory Game"} desc={"Memory game made as an entry to React."} url={"https://uvgenios.online/21500/lab6/"} colors={colors}/>
            <Card img={"/maze.png"} title={"Maze Game"} desc={"A simple maze game with a layout generated by an API to showcase Storybook and React functionality."} url={"https://gregarious-genie-0382dc.netlify.app/"} colors={colors}/>
            <Card img={"/calc.png"} title={"Basic Calculator"} desc={"A calculator with basic functionality made with React."} url={"https://uvgenios.online/21500/lab9/"} colors={colors}/>
          </div>
        )
        
      case 1:
        return (
          <div className="aboutMeHolder">
            <div className="generalInfo">
              <span><span style={{color: colors[2]}}>-&gt;</span> From Guatemala</span>
              <span><span style={{color: colors[2]}}>-&gt;</span> Halfway done with studies</span>
              <span><span style={{color: colors[2]}}>-&gt;</span> 20 years old</span>
              <span><span style={{color: colors[2]}}>-&gt;</span> Videogame enjoyer</span>
            </div>
            <div className="bio">
              <p>Ever since I first came into contact with a computer, I've been fascinated by
                their inner workings and what they are made of.
                Unsurprisingly, I've always enjoyed tinkering with everything I come into contact 
                with, and it's not any different when it comes to programming. I'll get stuck on
                one problem for eternity if it means I get to discover something new.
                <br/>Thanks to that, I believe I can adapt very quickly to any situation and
                I'm a great problem-solver.
                <br /> <br />In general, I'm a very relaxed person (maybe a bit too much at
                times), so it's very rare to see me panicking and I work great under pressure. 
                I might even work better when there's a lot of pressure, as it lights 
                that ever-illusive productivity flame inside me.
                <br /> <br />You might also notice that one cat that I have as my profile picture 
                on every platform imaginable. That's my cat.
              </p>
            </div>
          </div>
        )
      case 2:
        return (
          <div className="textHolder">
            <span>If you'd like to know more, get in contact:</span>
            <span style={{borderBottom: `2px solid ${colors[2]}`}}>flo21500@uvg.edu.gt</span>
            <span style={{borderBottom: `2px solid ${colors[2]}`}}>agriodude@gmail.com</span>
          </div>
        )
    }
  }

  return (
    <>
      <div className="bgContainer">
        <MouseParallax isAbsolutelyPositioned strength={0.025} shouldResetPosition>
          <div className="bgItems">{populateBG(50)}</div>
        </MouseParallax>
      </div>
      <ColorPicker callback={pickerCallback} />
      <ScrollParallax strength={0.6} lerpEase={0.1}>
        <div className="titleContainer">
          <h1 className="name">Adrián Flores</h1>
          <div className="separator"  style={{backgroundColor: colors[1]}} />
          <h2 className="personalDesc">Computer Science student at Universidad del Valle</h2>
        </div>
      </ScrollParallax>
      <div className="projectContainer">
        <SectionSelector callback={setCurrentSection} colors={colors} />
        {showSection(currentSection)}
      </div>
    </>
  )
}

export default App
